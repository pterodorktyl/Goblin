//The hackbox command uses the same syntax as the ssh source file. You should run this command from a root user.
	if params.len < 2 or params.len > 3 then exit("Proper Syntax: hackbox user@pass [ip].")
credentials = params[0].split("@")
user = credentials[0]
password = credentials[1]
port = 22
//Convert params to integer, which is what connect_service accepts. You're establishing an SSH connection with your rented server.
	if params.len == 3 then port = params[2].to_int
	if typeof(port) != "number" then exit("Invalid port: " + port)
//Declare file handling parameters for yourself on your own machine.
computer = get_shell.host_computer
//Declare file handling parameters for a list of your required libraries. These libs are located at the top of your directory.
//Libs that are held in areas outside of the /lib folder do not read as exploitable.
reqlibs = computer.File("/")
//Declare a list of the locations that currently hold your required libraries.
reqlibs = ["/aptclient.so", "/librepository.so", "/metaxploit.so", "/librshell.so", "/crypto.so"]
//Now that you've got that out of the way, finish establishing a shell on your hackbox using the supplied credentials.
shell = get_shell.connect_service(params[1], port, user, password, "ssh")

		print("Arming hackbox.")
//Copy main machine's /bin to hackbox via your hackbox shell. This must be done to make sure your hackbox /bin has not been compromised.
		get_shell.scp("/bin", "/bin", shell)
//Run a for loop through reqlibs to pass your libraries to the hackbox. Notice that for each copied file, you must get_shell.
	for eachlib in reqlibs
		get_shell.scp(eachlib, "/lib", shell)
	end for

		print("Hackbox is armed and vulnerable. Proceed with caution.")
